#ifdef SVQC

void r22heli_minigun(entity instance, entity player, entity gunmount1, entity tur1, entity gunmount2, entity tur2, float dt)
{
	if(PHYS_INPUT_BUTTON_ATCK(player) && instance.vehicle_ammo1 >= autocvar_g_vehicle_lightapc_minigun_ammo_cost && instance.attack_finished_single[0] <= time)
	{
		instance.cnt = time;
		vwep_minigun_attack("tag_mgun", player, gunmount1, tur1, DEATH_VH_SPID_MINIGUN.m_id, autocvar_g_vehicle_lightapc_minigun_damage, autocvar_g_vehicle_lightapc_minigun_spread,
				autocvar_g_vehicle_lightapc_minigun_force, autocvar_g_vehicle_lightapc_minigun_solidpenetration, autocvar_g_vehicle_lightapc_minigun_expelbulletcasings);
		vwep_minigun_attack("tag_mgun", player, gunmount2, tur2, DEATH_VH_SPID_MINIGUN.m_id, autocvar_g_vehicle_lightapc_minigun_damage, autocvar_g_vehicle_lightapc_minigun_spread,
				autocvar_g_vehicle_lightapc_minigun_force, autocvar_g_vehicle_lightapc_minigun_solidpenetration, autocvar_g_vehicle_lightapc_minigun_expelbulletcasings);
		instance.vehicle_ammo1 -= autocvar_g_vehicle_lightapc_minigun_ammo_cost;
		instance.attack_finished_single[0] = time + autocvar_g_vehicle_lightapc_minigun_refire;
		instance.count = 1; // something to do with reload, probably unused
	}
	else
	{
		vehicles_regen(instance, instance.cnt, vehicle_ammo1, autocvar_g_vehicle_lightapc_minigun_ammo_max,
										   autocvar_g_vehicle_lightapc_minigun_ammo_regen_pause,
										   autocvar_g_vehicle_lightapc_minigun_ammo_regen, dt, false);
	}

	player.vehicle_ammo1 = (instance.vehicle_ammo1 / autocvar_g_vehicle_lightapc_minigun_ammo_max) * 100;
}

#endif
