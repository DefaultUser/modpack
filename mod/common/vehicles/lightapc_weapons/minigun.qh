#ifdef SVQC

AUTOCVAR(g_vehicle_lightapc_minigun_expelbulletcasings, bool, false, "");
AUTOCVAR(g_vehicle_lightapc_minigun_damage, float, 12, "");
AUTOCVAR(g_vehicle_lightapc_minigun_force, float, 9, "");
AUTOCVAR(g_vehicle_lightapc_minigun_spread, float, 0.015, "");
AUTOCVAR(g_vehicle_lightapc_minigun_refire, float, 0.1, "");
AUTOCVAR(g_vehicle_lightapc_minigun_ammo_cost, int, 1, "");
AUTOCVAR(g_vehicle_lightapc_minigun_ammo_max, int, 97, "");
AUTOCVAR(g_vehicle_lightapc_minigun_ammo_regen, int, 47, "");
AUTOCVAR(g_vehicle_lightapc_minigun_ammo_regen_pause, float, 1, "");
AUTOCVAR(g_vehicle_lightapc_minigun_solidpenetration, float, 32, "");

void lightapc_minigun(entity player, entity gunmount, entity thegun, float dt)
{
	if(PHYS_INPUT_BUTTON_ATCK(player) && gunmount.vehicle_ammo1 >= autocvar_g_vehicle_lightapc_minigun_ammo_cost && gunmount.attack_finished_single[0] <= time)
	{
		gunmount.cnt = time;
		vwep_minigun_attack("tag_mgun", player, gunmount, thegun, DEATH_VH_SPID_MINIGUN.m_id, autocvar_g_vehicle_lightapc_minigun_damage, autocvar_g_vehicle_lightapc_minigun_spread,
				autocvar_g_vehicle_lightapc_minigun_force, autocvar_g_vehicle_lightapc_minigun_solidpenetration, autocvar_g_vehicle_lightapc_minigun_expelbulletcasings);
		gunmount.vehicle_ammo1 -= autocvar_g_vehicle_lightapc_minigun_ammo_cost;
		gunmount.attack_finished_single[0] = time + autocvar_g_vehicle_lightapc_minigun_refire;
	}
	else
	{
		vehicles_regen(gunmount, gunmount.cnt, vehicle_ammo1, autocvar_g_vehicle_lightapc_minigun_ammo_max,
										   autocvar_g_vehicle_lightapc_minigun_ammo_regen_pause,
										   autocvar_g_vehicle_lightapc_minigun_ammo_regen, dt, false);
	}

	player.vehicle_ammo1 = (gunmount.vehicle_ammo1 / autocvar_g_vehicle_lightapc_minigun_ammo_max) * 100;
}

#endif
