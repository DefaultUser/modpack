#pragma once

#ifdef GAMEQC
MSG_INFO_NOTIF(DEATH_MURDER_HELI_PROPELLER,                   1,  3, 2, "spree_inf s1 s2 s3loc spree_end", "s2 s1",                       "notify_death",     _("^BG%s%s^K1 was chopped up by ^BG%s^K1's helicopter propeller%s%s"), "")

MSG_INFO_NOTIF(DEATH_SELF_HELI_PROPELLER,                     1,  2, 1, "s1 s2loc spree_lost", "s1",                                      "notify_death",     _("^BG%s^K1 was chopped up by a helicopter propeller%s%s"), "")
MSG_CENTER_NOTIF(DEATH_SELF_HELI_PROPELLER,                   1,      0, 0, "",                     CPID_Null,                            "0 0",              _("^K1You were chopped up by a helicopter propeller!"), "")

MSG_MULTI_NOTIF(DEATH_MURDER_HELI_PROPELLER,                  1,  NULL,                             INFO_DEATH_MURDER_HELI_PROPELLER,                         NULL)
MSG_MULTI_NOTIF(DEATH_SELF_HELI_PROPELLER,                    1,  NULL,                             INFO_DEATH_SELF_HELI_PROPELLER,                           CENTER_DEATH_SELF_HELI_PROPELLER)

REGISTER_DEATHTYPE(HELI_PROPELLER,                            DEATH_SELF_HELI_PROPELLER,            DEATH_MURDER_HELI_PROPELLER,          "vehicle")
#endif

#ifdef SVQC

.entity bomb3, bomb4, bomb5, bomb6;
.entity bomb11;

////For spinning rotor death areas.
.entity rotorbox;

.vector rotoroffset;
.bool rotor_is;

void helicopter_rotor_die(entity hitbox);

void helicopter_rotor_touch(entity this, entity toucher);

void helicopter_rotor_touch_hitbox(entity this, entity toucher);

void helicopter_rotor_think(entity this);

void helicopter_rotor_think_noz(entity this);

void helicopter_rotor_spawn_hitbox(int rotortype, entity vehic, entity hitbox, vector min_s, vector max_s, float fwd_s, float right_s, float up_s);

#endif
