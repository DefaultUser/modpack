#pragma once

// Full list of all stat constants, included in a single location for easy reference
// 255 is the current limit (MAX_CL_STATS - 1), engine will need to be modified if you wish to add more stats

const int MAX_CL_STATS = 256;

#ifdef SVQC
#include <common/physics/movetypes/movetypes.qh>
#endif

noref bool autocvar_sv_gameplayfix_nogravityonground;
noref bool autocvar_sv_gameplayfix_q2airaccelerate;
noref bool autocvar_sv_gameplayfix_gravityunaffectedbyticrate;
REGISTER_STAT(MOVEFLAGS, int, MOVEFLAG_VALID
                              | (autocvar_sv_gameplayfix_q2airaccelerate ? MOVEFLAG_Q2AIRACCELERATE : 0)
                              | (autocvar_sv_gameplayfix_nogravityonground ? MOVEFLAG_NOGRAVITYONGROUND : 0)
                              | (autocvar_sv_gameplayfix_gravityunaffectedbyticrate ? MOVEFLAG_GRAVITYUNAFFECTEDBYTICRATE : 0))

#ifdef SVQC
int autocvar_sv_gameplayfix_downtracesupportsongroundflag;
int autocvar_sv_gameplayfix_easierwaterjump;
int autocvar_sv_gameplayfix_stepdown;
int autocvar_sv_gameplayfix_stepmultipletimes;
int autocvar_sv_gameplayfix_unstickplayers;
int autocvar_sv_gameplayfix_fixedcheckwatertransition;

bool autocvar_sv_gameplayfix_upwardvelocityclearsongroundflag;

float autocvar_sv_gravity;
float autocvar_sv_stepheight;
float autocvar_sys_ticrate;
float autocvar_slowmo;
#endif
REGISTER_STAT(GAMEPLAYFIX_DOWNTRACEONGROUND, int, autocvar_sv_gameplayfix_downtracesupportsongroundflag)
REGISTER_STAT(GAMEPLAYFIX_EASIERWATERJUMP, int, autocvar_sv_gameplayfix_easierwaterjump)
REGISTER_STAT(GAMEPLAYFIX_STEPDOWN, int, autocvar_sv_gameplayfix_stepdown)
REGISTER_STAT(GAMEPLAYFIX_STEPMULTIPLETIMES, int, autocvar_sv_gameplayfix_stepmultipletimes)
REGISTER_STAT(GAMEPLAYFIX_UNSTICKPLAYERS, int, autocvar_sv_gameplayfix_unstickplayers)
REGISTER_STAT(GAMEPLAYFIX_UPVELOCITYCLEARSONGROUND, int, autocvar_sv_gameplayfix_upwardvelocityclearsongroundflag)
REGISTER_STAT(GAMEPLAYFIX_WATERTRANSITION, int, autocvar_sv_gameplayfix_fixedcheckwatertransition)

REGISTER_STAT(MOVEVARS_JUMPSTEP, int, cvar("sv_jumpstep"))
REGISTER_STAT(NOSTEP, int, cvar("sv_nostep"))

REGISTER_STAT(MOVEVARS_GRAVITY, float, autocvar_sv_gravity)
.float gravity;
// FIXME: Was 0 on server, 1 on client. Still want that?
REGISTER_STAT(MOVEVARS_ENTGRAVITY, float, (this.gravity) ? this.gravity : 1)
REGISTER_STAT(MOVEVARS_STEPHEIGHT, float, autocvar_sv_stepheight)

#ifdef SVQC
float autocvar_sv_wallfriction;
#endif
REGISTER_STAT(MOVEVARS_WALLFRICTION, int, autocvar_sv_wallfriction)
