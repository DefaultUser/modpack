#pragma once

int intermission_running;

bool autocvar_sv_eventlog;
int autocvar_sv_eventlog_files_counter; // TODO

.int playerid;

void GameLogEcho(string s);

float skill;

#define bprintf(...) bprint(sprintf(__VA_ARGS__))

.float t_width;
.float t_length;

.string map;

.int swim_flag;
.bool jump_flag;

.string deathtype;
.string(entity this) deathmessage;

.float height;

.float show_hostile;

.int walkframe;

.vector pos1, pos2;

.float search_time;

.entity trigger_field;

.string noise4;

.vector dest1, dest2;

void set_anim(entity this, int frm, void(entity) tnk);

.float air_finished;

.entity movetarget;

.vector mangle;

.int count;

.float dmg;

bool gameover;

.float pausetime;

.float invincible_finished;
.float invisible_finished;
.float super_damage_finished;
.float radsuit_finished;

.float invincible_time, invincible_sound;
.float invisible_time, invisible_sound;
.float super_time, super_sound;
.float rad_time;
.float fly_sound;

.float pain_finished;

.string mdl;

.int aflag;

.int worldtype;

.bool axhitme;

.int attack_state;
const int AS_STRAIGHT = 1;
const int AS_SLIDING = 2;
const int AS_MELEE = 3;
const int AS_MISSILE = 4;

.float lefty;

.entity oldenemy;

.void(entity this) th_stand;
.void(entity this) th_walk;
.void(entity this) th_run;
.void(entity this) th_missile;
.void(entity this) th_melee;
.void(entity this, entity attacker, float damage) th_pain;
.void(entity this, entity attacker) th_die;

string current_cdtrack;

float sys_frametime;     // gets initialised in worldspawn, saves the value from autocvar_sys_ticrate

float servertime, serverprevtime, serverframetime;
